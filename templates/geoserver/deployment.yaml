apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-geoserver
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-geoserver
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.geoserver.image.secret }}
      imagePullSecrets: 
        - name: {{ .Values.geoserver.image.secret }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.geoserver.image.repository }}:{{ .Values.geoserver.image.tag }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /geoserver/
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: PUBLIC_PORT
          value: "80"
        - name: DJANGO_URL
          value: http://{{ .Values.ingress.hosts | first }}/
        - name: GEOSERVER_PUBLIC_LOCATION
          value: http://{{ .Values.ingress.hosts | first }}/geoserver/
        - name: GEOSERVER_LOCATION
          value: http://{{ .Values.ingress.hosts | first }}/geoserver/
        - name: GEOSERVER_DATA_DIR
          value: /geoserver_data/data
        - name: SITEURL
          value: http://{{ .Values.ingress.hosts | first }}/geoserver/
        volumeMounts:
        - name: geoserverdata
          mountPath: /geoserver_data/data
      volumes:
      - name: geoserverdata
      {{- if .Values.geoserver.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.geoserver.persistence.existingClaim | default (include "geoserver" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
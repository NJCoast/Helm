image:
  repository: gcr.io/njcoast-174716/django
  tag: test

imagePullPolicy: Always

service:
  type: ClusterIP
  internalPort: 8000
  externalPort: 8000

ingress:
  enabled: true
  host: njcoast.web.james-sweet.com
  annotations:
    kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

geoserver:
  image:
    repository: gcr.io/njcoast-174716/geoserver
    tag: test

  service:
    type: ClusterIP
    internalPort: 8080
    externalPort: 8080

  persistence:
    enabled: false
    # existingClaim:
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 1Gi

postgresql:
  image: "postgres"
  imageTag: "9.6.2"

  ## Create a database user
  ## Default: postgres
  postgresUser: njcoast
  ## Default: random 10 character string
  postgresPassword: test

  ## Create a database
  ## Default: the postgres user
  # postgresDatabase:

  ## Persist data to a persitent volume
  persistence:
    enabled: false

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

  metrics:
    enabled: false

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

  service:
    type: ClusterIP
    port: 5432
rabbitmq:
  ## RabbitMQ application username
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  rabbitmqUsername: user

  ## RabbitMQ application password
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  rabbitmqPassword: test

  ## Node port
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodePort: 5672

  ## Kubernetes service type
  serviceType: ClusterIP

  persistence:
    enabled: false